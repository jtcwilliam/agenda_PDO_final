<?php
header('Content-Type: text/html; charset=UTF-8');

use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\SMTP;
use PHPMailer\PHPMailer\Exception;

class EnvioEmail{
 

private $email;

function __construct()
{

    require 'vendor/autoload.php';
    $mail = new PHPMailer(true);
    $this->setEmail($mail);
  
}

        //Create an instance; passing `true` enables exceptions

public function enviarEmail($tituloEmail,$msg, $destinatario){
            try {
                     
 
                header('Content-Type: text/html; charset=UTF-8');
               $mail = $this->getEmail();
               $mail->CharSet  ='UTF-8';
                $mail->isSMTP();                                            //Send using SMTP
                $mail->Host       = 'smtp.gmail.com';                     //Set the SMTP server to send through
                $mail->SMTPAuth   = true;                                   //Enable SMTP authentication
                $mail->Username   = 'devmhwill@gmail.com';                     //SMTP username
                $mail->Password   = 'ayvp mhri ydor kgrc';                               //SMTP password
                $mail->SMTPSecure = 'ssl';
                //$mail->SMTPSecure = PHPMailer::ENCRYPTION_SMTPS;            //Enable implicit TLS encryption
                $mail->Port       = 465;                                    //TCP port to connect to; use 587 if you have set `SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS`

                //Recipients
              //  $mail->setFrom('suporte@associado.abimapi.com.br', 'Mailer');
                $mail->addAddress($destinatario, 'teste');     
                

                //Content
                $mail->isHTML(true);                                  //Set email format to HTML
                $mail->Subject = $tituloEmail;
                $mail->Body    =  $msg;
                $mail->AltBody = 'This is the body in plain text for non-HTML mail clients';

                if($mail->send()){
                   return true;
                }
            } catch (Exception $e) {
                echo "Message could not be sent. Mailer Error: {$mail->ErrorInfo}";
            }
        }
       

/**
 * Get the value of email
 */ 
public function getEmail()
{
return $this->email;
}

/**
 * Set the value of email
 *
 * @return  self
 */ 
public function setEmail($email)
{
$this->email = $email;

return $this;
}
}